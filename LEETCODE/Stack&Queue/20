#20 Valid Parentheses

// using queue (X)
class solution {
    public boolean isValid(String s) {
        Queue<String> left;
        ((())){}({}) 不对了这个歌
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == "{" || s.charAt(i) == "(" || s.charAt(i) = "[" ) {
                left.push(s.charAt(i));
            } else {
                return s.charAt(i) == left.poll();
            }
        }
        return true;
    }
}

class Solution {
    public boolean isValid(String s) {
        Deque<Character> deque = new LinkedList<>();
        char ch;
        for (int i = 0; i < s.length(); i++) {
            ch = s.charAt(i);
            if (ch == '(') {
                deque.push(')');
            } else if (ch == '{') {
                deque.push('}');
            } else if (ch == '[') {
                deque.push(']');
            } else if (deque.isEmpty() || deque.peek() != ch) {
                return false;
            } else {
                deque.pop();
            }

        }
        return deque.isEmpty();
    }
}