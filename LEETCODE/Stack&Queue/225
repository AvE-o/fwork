#225 Implement Stack using Queues

class MyStack {
    Queue<Integer> queue1;
    Queue<Integer> queue2;
    public MyStack() {
        queue1 = new LinkedList<>();
        queue2 = new LinkedList<>();
    }

    public void push(int x) {
        MoveQueue(x);
    }

    public int pop() {
        queue1.poll();
    }

    public int top() {
        queue1.peek();
    }

    public boolean empty() {
        return queue1.isEmpty();
    }

    private void MoveQueue(int x) {
        if (queue1.isEmpty()) {queue.push(x)};
        else {
            while (!queue1.isEmpty()) {
                queue2.push(queue.pop());
            }
            queue.push(x);
            while (!queue2.isEmpty()) {
                queue1.push(queue2.pop());
            }
        }

    }
}



// push 方法

public void push(int x) {
    queue2.offer(x);
    while (!queue1.isEmpty()) {
        queue2.offer(queue1.poll());
    }
    Queue<Integer> temp;
    temp = queue1;
    queue1 = queue2;
    queue2 = temp;

}


queue1:
queue2: